cv2 <- function(df.y, y, env, part.env=1, K, seed=1234, f=.2,fold=10,nIter = 2E4,burnIn = 2E3,thin = 5,saveAt = 'bggeCV_'){
  require(BGGE)
  df.y$gid <- as.factor(df.y$gid)
  df.y$env <- as.factor(df.y$env)
  (ne <- as.vector(table(df.y$env)))
  yHat  <- c()
  yHat. <- c()
  ENVS<-nlevels(env)
  GIDS <- nlevels(df.y$gid)
  starttime <- Sys.time()
  set.seed(seed)
  for(i in 1:fold){
    
    cat(paste("#----------------------------------------------------------------------------#","\n",sep=""))
    cat(paste("Starting fold",i,"at:",Sys.time(),"\n",sep=" "))
    df.ycopy <- df.y
    # definying new env
    #cat(paste("Sampling environments...","\n",sep=" "))
    tenv <- unique(df.ycopy$env)[sample(1:ENVS, size = part.env, replace = TRUE)]
    df.ycopy$value[!(df.ycopy$env %in% tenv)] <- NA

    # definying new gid
   # cat(paste("Sampling genotypes...","\n",sep=" "))
    tgid <- unique(df.ycopy$gid)[sample(1:GIDS, size = GIDS * f, replace = FALSE)]
    df.ycopy$value[!(df.ycopy$gid %in% tgid)] <- NA
    
    fit <- BGGE(y = df.ycopy$value,
                K = K,
                nIter = nIter,
                burnIn = burnIn,
                thin = thin,
                saveAt = saveAt ,
                verbose = FALSE)
    
    yHat <- data.frame(obs= df.y$value, pred = fit$yHat, gid = df.y$gid, env=df.y$env,pop=NA, fold=i)
    
    # setting scenario comparisions
    yHat$pop[(df.ycopy$env %in% tenv)   &  (df.ycopy$gid %in% tgid) ]   <- "KnowEnv|KnowGid"
    yHat$pop[!(df.ycopy$env %in% tenv)  &  !(df.ycopy$gid %in% tgid)]   <- "NewEnv|NewGid"
    yHat$pop[!(df.ycopy$env %in% tenv)  &  (df.ycopy$gid %in% tgid) ]   <- "NewEnv|KnowGid"
    yHat$pop[(df.ycopy$env %in% tenv)   &  !(df.ycopy$gid %in% tgid)]   <- "KnowEnv|NewGid"
    
    yHat. <- rbind(yHat.,yHat)
  }
  

  cat(paste("#----------------------------------------------------------------------------#","\n",sep=""))
  cat(paste("Finished at:",Sys.time(),"\n",sep=" "))
  cat(paste("#----------------------------------------------------------------------------#","\n",sep=""))
  fineshedttime <- Sys.time()
 # saveRDS(time=list(starttime,fineshedttime))
  return(yHat.)
}
